services:
  nginx:
    container_name: nginx-${COMPOSE_PROJECT_NAME}
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/${COMPOSE_PROJECT_NAME}
    networks:
      - php-network
    depends_on:
      - php
      - pgsql
  php:
    container_name: php-${COMPOSE_PROJECT_NAME}
    build:
      args:
        - PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      context: docker/php
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/${COMPOSE_PROJECT_NAME}
    networks:
      - php-network
    depends_on:
      - pgsql
  pgsql:
    container_name: pgsql-${COMPOSE_PROJECT_NAME}
    image: postgres:16.2-alpine
    ports:
      - "5432:5432"
    networks:
      - php-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgsql_data:/var/lib/postgresql

  composer:
    container_name: composer-${COMPOSE_PROJECT_NAME}
    build:
      args:
        - PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      context: docker/composer
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/${COMPOSE_PROJECT_NAME}
    networks:
      - php-network
  artisan:
    container_name: laravel-artisan--${COMPOSE_PROJECT_NAME}
    build:
      context: docker/php
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/${COMPOSE_PROJECT_NAME}
    networks:
      - php-network
    entrypoint: ["php", "/var/www/${COMPOSE_PROJECT_NAME}/artisan"]

volumes:
  pgsql_data:

networks:
  php-network:
    name: php-network
    driver: bridge
    external: true